# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.define "database" do |db|
    db.vm.box = "ubuntu/xenial64"
	db.vm.provider "virtualbox" do |vb|
	  vb.memory = "512"  
	end
    db.vm.hostname = "db01"
    db.vm.network "private_network", ip: "192.168.55.100"
    # MySQL Port nur im Private Network sichtbar
	# db.vm.network "forwarded_port", guest:3306, host:3306, auto_correct: false
  	db.vm.provision "shell", path: "db.sh"
  end
  
  config.vm.define "web" do |web|
    web.vm.box = "ubuntu/xenial64"
    web.vm.hostname = "web01"
    web.vm.network "private_network", ip:"192.168.55.101" 
	web.vm.network "forwarded_port", guest:80, host:8080, auto_correct: true
	web.vm.provider "virtualbox" do |vb|
	  vb.memory = "512"  
	end     
  	web.vm.synced_folder ".", "/var/www/html"  
	web.vm.provision "shell", inline: <<-SHELL
		sudo apt-get update
		sudo apt-get -y install debconf-utils apache2 nmap
		sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password password admin'
		sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password_again password admin'
		sudo apt-get -y install php libapache2-mod-php php-curl php-cli php-mysql php-gd mysql-client  
		# Admininer SQL UI 
		sudo mkdir /usr/share/adminer
		sudo wget "http://www.adminer.org/latest.php" -O /usr/share/adminer/latest.php
		sudo ln -s /usr/share/adminer/latest.php /usr/share/adminer/adminer.php
		echo "Alias /adminer.php /usr/share/adminer/adminer.php" | sudo tee /etc/apache2/conf-available/adminer.conf
		sudo a2enconf adminer.conf 
		sudo service apache2 restart 
	  echo '127.0.0.1 localhost web01\n192.168.55.100 db01' > /etc/hosts
	  
	  #Installation der UFW Firewall
		sudo apt-get install -y ufw
		#Port Konfiguration
		sudo ufw allow 80/tcp
	 	sudo ufw allow from 192.168.0.204 to any port 22
		#UFW-Dienst einschalten
		sudo ufw enable

		#Reverse Proxy Installation
		sudo apt-get install libapache2-mod-proxy-html
		sudo apt-get install libxml2-dev
		
		#Apache-Webserver neu starten
		sudo service apache2 restart
			
		#Apache Module Aktivieren
		sudo a2enmod proxy
    	sudo a2enmod proxy_html
    	sudo a2enmod proxy_http 
		
		#Dateieintrag erstellen
		echo 'web01 localhost' > /etc/apache2/apache2.conf

		#Apache-Webserver neu starten
		sudo service apache2 restart

		# Allgemeine Proxy Einstellungen
		ProxyRequests Off
		<Proxy *>
			Order deny,allow
			Allow from all
		</Proxy>
	
		# Weiterleitungen master
		ProxyPass /master http://master
		ProxyPassReverse /master http://master


		# Public Key Verfahren
		sudo su - admin01
		
		# Key erstellen
		ssh-keygen -t rsa -b 4096 

		# Key auf Zielsystem kopieren
		ssh-copy-id -i ~/.ssh/id_rsa.pub admin01@db01 

		

SHELL
	end  
 end
